apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.kstor.homeawaytest"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "google_map_key", "AIzaSyC6SflSVpRXbS2qbY0P7yJ1THGl-dOJiUQ"
        multiDexEnabled true


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        dev {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }

    }
}
configurations {
    ktlint
}


ext {
    // App dependencies
    androidXVersion = '1.1.0'
    androidXTestCoreVersion = '1.2.0'
    androidXTestExtKotlinRunnerVersion = '1.1.1-beta01'
    androidXTestRulesVersion = '1.2.0-beta01'
    androidXLegacySupport = '1.0.0'
    appCompatVersion = '1.1.0'
    archTestingVersion = '2.0.0'
    dexMakerVersion = '2.12.1'
    espressoVersion = '3.2.0'
    fragmentVersion = '1.1.0'
    junitVersion = '4.12'
    materialVersion = '1.0.0'
    mockitoVersion = '2.8.9'
    recyclerViewVersion = '1.0.0'
    robolectricVersion = '4.3'
    roomVersion = '2.1.0'
    roomKaptCompiler = '1.1.1'
    daggerVersion = '2.24'
    retrofit = '2.6.0'
    gson = '2.8.5'
    retrofitAdapterRx = '2.2.0'
    navigationComponent = '2.1.0'
    googleMap = '17.0.0'
    rxKotlin = '2.4.0'
    rxAndroid = '2.1.1'
    picasso = '2.71828'
    ktLintVersion = '0.34.2'
    mokitoKotlin = '1.5.0'
    mokitoInline = '3.0.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$androidXVersion"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.google.code.gson:gson:$gson"

    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitAdapterRx"

    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"


    implementation "androidx.navigation:navigation-fragment-ktx:$navigationComponent"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationComponent"

    implementation "com.squareup.picasso:picasso:$picasso"

    ktlint "com.pinterest:ktlint:$ktLintVersion"

    implementation "com.google.android.gms:play-services-maps:$googleMap"

    //Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomKaptCompiler"
    kaptAndroidTest "android.arch.persistence.room:compiler:$roomKaptCompiler"

    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mokitoKotlin"
    testImplementation "org.mockito:mockito-inline:$mokitoInline"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"

    implementation("com.squareup.okhttp3:logging-interceptor:4.2.1")
    implementation 'com.android.support:multidex:2.0.1'
    /* Dagger */
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"

    /* Dependencies for Android unit tests */
    androidTestImplementation "junit:junit:$junitVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    implementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

}



task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
